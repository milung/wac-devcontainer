// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/typescript-node
{
	"name": "wac-devcontainer",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"build": {
		"dockerfile": "Dockerfile",
		"args": { },
		"context": ".."
	},
	"features": {
		"ghcr.io/devcontainers/features/powershell:latest": {
			"version": "latest"
		},
		"ghcr.io/devcontainers/features/docker-in-docker:2": {},
		"ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {},
		"ghcr.io/devcontainers-contrib/features/kubectx-kubens:1":{},
		"ghcr.io/devcontainers/features/go:1": {
			"version": "1.21"
		}
	},

	// Mounting intermediate files (node_modules, www, ... ) as volumes is recommended 
	// when using Docker Desktop for Mac or Windows - speeds up compilation and installs.
	"mounts": [
		"source=${localWorkspaceFolderBasename}-node_modules,target=${containerWorkspaceFolder}/ambulance-ufe/node_modules,type=volume",
		"source=${localWorkspaceFolderBasename}-dist,target=${containerWorkspaceFolder}/ambulance-ufe/dist,type=volume",
		"source=${localWorkspaceFolderBasename}-www,target=${containerWorkspaceFolder}/ambulance-ufe/www,type=volume",
		"source=${localWorkspaceFolderBasename}-stencil,target=${containerWorkspaceFolder}/ambulance-ufe/.stencil,type=volume"
	],

	"remoteEnv": {
		"PATH": "${containerEnv:PATH}:/usr/local/go/bin"
	},
	
	// copy kube config into container and pull latest image
	"initializeCommand": [ ".devcontainer/init" ],
	"postAttachCommand": "mkdir -p ~/.kube && cp ${containerWorkspaceFolder}/.kube/config  ~/.kube/config ",


	// must chovn attached volumes to node user
	"postCreateCommand": "sudo chown node ambulance-ufe/node_modules ambulance-ufe/www ambulance-ufe/dist ambulance-ufe/.stencil; export PATH=${PATH}:/usr/local/go/bin",


	"forwardPorts": [
		3333
	],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "yarn install",

	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"extensions": [
				"dbaeumer.vscode-eslint",
				"github.vscode-github-actions",
				"mermade.openapi-lint",
				"philosowaffle.openapi-designer",
				"natemoo-re.vscode-stencil-tools",
				"golang.go",
			],
			"settings": {
				"terminal.integrated.defaultProfile.linux": "pwsh"
			}
		}
	}
}
